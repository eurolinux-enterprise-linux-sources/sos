diff -Naur sos-3.7/sos/policies/redhat.py sos-3.7-new/sos/policies/redhat.py
--- sos-3.7/sos/policies/redhat.py	2019-08-29 11:44:26.741315523 +0000
+++ sos-3.7-new/sos/policies/redhat.py	2019-08-29 11:09:29.161938380 +0000
@@ -31,9 +31,9 @@
 
 
 class RedHatPolicy(LinuxPolicy):
-    distro = "Scientific Linux"
-    vendor = "Scientific Linux"
-    vendor_url = "http://www.scientificlinux.org/"
+    distro = "EuroLinux"
+    vendor = "EuroLinux"
+    vendor_url = "http://euro-linux.com/"
     _redhat_release = '/etc/redhat-release'
     _tmp_dir = "/var/tmp"
     _rpmq_cmd = 'rpm -qa --queryformat "%{NAME}|%{VERSION}|%{RELEASE}\\n"'
@@ -92,9 +92,9 @@
 
     @classmethod
     def check(cls):
-        """This method checks to see if we are running on SL. It must be
+        """This method checks to see if we are running on EuroLinux. It must be
         overriden by concrete subclasses to return True when running on a
-        Fedora, RHEL or other distribution or False otherwise."""
+        Fedora, RHEL or EuroLinux distribution or False otherwise."""
         return False
 
     def check_usrmove(self, pkgs):
@@ -185,7 +185,7 @@
         return self.host_name()
 
 
-# Container environment variables on Red Hat systems.
+# Container environment variables on EuroLinux systems.
 ENV_CONTAINER = 'container'
 ENV_HOST_SYSROOT = 'HOST'
 
@@ -198,22 +198,22 @@
              'hardware', 'host', 'kernel', 'logs', 'lvm2', 'memory', 'rpm',
              'process', 'systemd', 'yum', 'xfs']
 
-RHEL_RELEASE_STR = "Scientific Linux"
+RHEL_RELEASE_STR = "EuroLinux"
 
 RHV = "rhv"
-RHV_DESC = "Red Hat Virtualization"
+RHV_DESC = "EuroLinux Virtualization"
 
 RHEL = "rhel"
 RHEL_DESC = RHEL_RELEASE_STR
 
 RHOSP = "rhosp"
-RHOSP_DESC = "Red Hat OpenStack Platform"
+RHOSP_DESC = "RDO"
 
 RHOCP = "ocp"
-RHOCP_DESC = "OpenShift Container Platform by Red Hat"
+RHOCP_DESC = "OpenShift"
 
 RH_SATELLITE = "satellite"
-RH_SATELLITE_DESC = "Red Hat Satellite"
+RH_SATELLITE_DESC = "EuroMan"
 SAT_OPTS = SoSOptions(verify=True, plugopts=['apache.log=on'])
 
 CB = "cantboot"
@@ -238,7 +238,7 @@
     CB: PresetDefaults(name=CB, desc=CB_DESC, note=CB_NOTE, opts=CB_OPTS)
 }
 
-# Legal disclaimer text for Red Hat products
+# Legal disclaimer text for EuroLinux products
 disclaimer_text = """
 Any information provided to %(vendor)s will be treated in \
 accordance with the published support policies at:\n
@@ -253,9 +253,9 @@
 
 
 class RHELPolicy(RedHatPolicy):
-    distro = RHEL_RELEASE_STR
-    vendor = "Scientific Linux"
-    vendor_url = "https://www.scientificlinux.org/"
+    distro = "EuroLinux"
+    vendor = "EuroLinux"
+    vendor_url = "https://support.euro-linux.com"
     msg = _("""\
 This command will collect diagnostic and configuration \
 information from this %(distro)s system and installed \
@@ -274,7 +274,7 @@
     def check(cls):
         """Test to see if the running host is a RHEL installation.
 
-            Checks for the presence of the "Scientific Linux"
+            Checks for the presence of the "EuroLinux"
             release string at the beginning of the NAME field in the
             `/etc/os-release` file and returns ``True`` if it is
             found, and ``False`` otherwise.
@@ -343,7 +343,7 @@
 
 ATOMIC = "atomic"
 ATOMIC_RELEASE_STR = "Atomic"
-ATOMIC_DESC = "Red Hat Enterprise Linux Atomic Host"
+ATOMIC_DESC = "EuroLinux Atomic Host"
 
 atomic_presets = {
     ATOMIC: PresetDefaults(name=ATOMIC, desc=ATOMIC_DESC, note=NOTE_TIME,
@@ -352,7 +352,7 @@
 
 
 class RedHatAtomicPolicy(RHELPolicy):
-    distro = "Red Hat Atomic Host"
+    distro = "EuroLinux Atomic Host"
     msg = _("""\
 This command will collect diagnostic and configuration \
 information from this %(distro)s system.
@@ -389,7 +389,7 @@
 
 
 class RedHatCoreOSPolicy(RHELPolicy):
-    distro = "Red Hat CoreOS"
+    distro = "EuroLinux CoreOS"
     msg = _("""\
 This command will collect diagnostic and configuration \
 information from this %(distro)s system.
@@ -410,7 +410,7 @@
         host_release = os.environ[ENV_HOST_SYSROOT] + cls._redhat_release
         try:
             for line in open(host_release, 'r').read().splitlines():
-                coreos |= 'Red Hat CoreOS' in line
+                coreos |= 'EuroLinux CoreOS' in line
         except IOError:
             pass
         return coreos
